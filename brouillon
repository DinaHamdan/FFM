<main>
    <a href="/ctrl/agre/add-agre-display.php">Ajouter des photos d'agrés</a>

    <?php
    foreach ($args['session']['listPhotoAgre'] as $args['session']['photoAgre']) { ?>
        <img id="agre-photo" src="data:image/png;base64,<?= base64_encode($args['session']['photoAgre']['illustration']) ?>" alt="photo d'un agré">
    <?php } ?>



    <?php

    foreach ($args['session']['listPhotoCatAgre'] as $args['session']['photoCatAgre']) { ?>
        <h2><?= $args['session']['photoCatAgre']['category'] ?> </h2>
        <h2><?= $args['session']['photoCatAgre']['type'] ?> </h2>
    <?php } ?>
</main>

<?php

foreach ($args['session']['listPhotoFire'] as $args['session']['photoFire']) { ?>

    <h2><?= $args['session']['photoFire']['name'] ?> </h2>
<?php } ?>


<?php

foreach ($args['session']['listPhotoLED'] as $args['session']['photoLED']) { ?>

    <h2><?= $args['session']['photoLED']['name'] ?> </h2>
<?php } ?>

<?php

foreach ($args['session']['listCategory'] as $args['session']['category']) { ?>

    <h2><?= $args['session']['category']['name'] ?> </h2>
<?php } ?>


//
<h2>Agrès Feu</h2>
<?php

foreach ($args['session']['listPhotoFire'] as $args['session']['photoFire']) { ?>
    <div>
        <h2><?= $args['session']['photoFire']['agreName'] ?> </h2>
        <a href=" "><img id="agre-photo" src="data:image/png;base64,<?= base64_encode($args['session']['photoFire']['illustration']) ?>" alt="photo d'un agré"></a>
    </div>
<?php } ?>

<h2> Agrès LED</h2>

<?php
foreach ($args['session']['listPhotoLED'] as $args['session']['photoLED']) { ?>

    <h2><?= $args['session']['photoLED']['agreName'] ?> </h2>
    <img id="agre-photo" src="data:image/png;base64,<?= base64_encode($args['session']['listPhotoLED'][0]['illustration']) ?>" alt="photo d'un agré">

<?php } ?>
<?php 
//List type of juggling props
    static function getTypeAgre($isMain): array
    {
        $query = 'SELECT typeAgre.id, typeAgre.name, typeAgre.label, photoAgre.illustration';
        $query .= ' FROM typeAgre';
        $query .= ' JOIN photoAgre ON typeAgre.id = photoAgre.idTypeAgre ';
        $query .= ' WHERE photoAgre.isMain = :isMain';
        $statement = libDb::connect()->prepare($query);
        $statement->bindParam(':isMain', $isMain);

        // - Exécute la requête
        $successOrFailure = $statement->execute();
        $typeAgre = $statement->fetchAll(PDO::FETCH_ASSOC);
        return $typeAgre;
    }


//List type of juggling props
static function getTypeAgre(): array
{
$query = 'SELECT typeAgre.id, typeAgre.name, typeAgre.label, typeAgre.description, photoAgre.id, photoAgre.illustration, photoAgre.illustration_filename';
$query .= ' FROM typeAgre';
$query .= ' JOIN photoAgre ON typeAgre.id = photoAgre.idTypeAgre ';

$statement = libDb::connect()->prepare($query);
// - Exécute la requête
$successOrFailure = $statement->execute();
$typeAgre = $statement->fetchAll(PDO::FETCH_ASSOC);
return $typeAgre;
/* // Add a column with formatted data
$listAgrephoto = [];
foreach ($typeAgre as $agre) {
$agre['photo'] = $agre['illustration'][0];
$agre['photo_filename'] = $agre['illustration_filename'][0];
$listAgrephoto[] = $agre;
}
return $listAgrephoto; */
}


foreach ($_POST['listIdAgre'] as $idAgre[]) {
foreach ($_POST['listIdCategoryFire'] as $idCategoryFire[]);
foreach ($_POST['listIdCategoryLED'] as $idCategoryLED[]);
foreach ($_POST['listIdCategoryDayProp'] as $idCategoryDayProp[]);

$isSuccess = LibAgre::addAgreCategoryFeu($idAgre, $idCategoryFire);
$isSuccess = LibAgre::addAgreCategoryLED($idAgre, $idCategoryLED);
$isSuccess = LibAgre::addAgreCategoryDayProp($idAgre, $idCategoryDayProp);
};

/* static function addAgreCategoryFeu($idAgre, $idCategoryFire): bool
{
$query = 'INSERT INTO typeAgreCategory( idAgre, idCategory) VALUES ( :idAgre, :idCategory)';
$statement = libDb::connect()->prepare($query);

$statement->bindParam(':idAgre', $idAgre);
$statement->bindParam(':idCategory', $idCategoryFire);
// - Exécute la requête
$isSuccess = $statement->execute();
return $isSuccess;
}
static function addAgreCategoryLED($idAgre, $idCategoryLED): bool
{
$query = 'INSERT INTO typeAgreCategory( idAgre, idCategory) VALUES ( :idAgre, :idCategory)';
$statement = libDb::connect()->prepare($query);

$statement->bindParam(':idAgre', $idAgre);
$statement->bindParam(':idCategory', $idCategoryLED);
// - Exécute la requête
$isSuccess = $statement->execute();
return $isSuccess;
}
static function addAgreCategoryDayProp($idAgre, $idCategoryDayProp): bool
{
$query = 'INSERT INTO typeAgreCategory( idAgre, idCategory) VALUES ( :idAgre, :idCategory)';
$statement = libDb::connect()->prepare($query);

$statement->bindParam(':idAgre', $idAgre);
$statement->bindParam(':idCategory', $idCategoryDayProp);
// - Exécute la requête
$isSuccess = $statement->execute();
return $isSuccess;
} */
}
/* //Get all photos from the fire gallerie
static function getAgrePhotoFeu(): array
{
$query = 'SELECT photoAgreGallerieFeu.id, photoAgreGallerieFeu.nameAgre, photoAgreGallerieFeu.idTypeAgre, photoAgreGallerieFeu.idCategory, photoAgreGallerieFeu.illustration, photoAgreGallerieFeu.illustration_filename ';
$query .= ' FROM photoAgreGallerieFeu ';
$statement = libDb::connect()->prepare($query);
$successOrFailure = $statement->execute();
$listPhotoAgreFeu = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoAgreFeu;
}
//Get all photos from the fire gallerie
static function getAgrePhotoLED(): array
{
$query = 'SELECT photoAgreGallerieLED.id, photoAgreGallerieLED.nameAgre, photoAgreGallerieLED.idTypeAgre, photoAgreGallerieLED.idCategory, photoAgreGallerieLED.illustration, photoAgreGallerieLED.illustration_filename ';
$query .= ' FROM photoAgreGallerieLED ';
$statement = libDb::connect()->prepare($query);
$successOrFailure = $statement->execute();
$listPhotoAgreLED = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoAgreLED;
} */
/* //Add photos to agre table
static function AddAgrePhotoFeu($idCategory, $idTypeAgre, $binaryFile, $nameFile): bool
{
$query = 'INSERT INTO photoAgreGallerieFeu( idCategory, idTypeAgre, illustration, illustration_filename) VALUES ( :idCategory, :idTypeAgre, :illustration, :illustration_filename)';
$statement = libDb::connect()->prepare($query);

$statement->bindParam(':idTypeAgre', $idTypeAgre);
$statement->bindParam(':idCategory', $idCategory);
$statement->bindParam(':illustration', $binaryFile, PDO::PARAM_LOB);
$statement->bindParam(':illustration_filename', $nameFile, PDO::PARAM_STR);
// - Exécute la requête
$isSuccess = $statement->execute();
return $isSuccess;
}

//Add photos to agre table
static function AddAgrePhotoLED($idCategory, $idTypeAgre, $binaryFile, $nameFile): bool
{
$query = 'INSERT INTO photoAgreGallerieLED( idCategory, idTypeAgre, illustration, illustration_filename) VALUES ( :idCategory, :idTypeAgre, :illustration, :illustration_filename)';
$statement = libDb::connect()->prepare($query);

$statement->bindParam(':idTypeAgre', $idTypeAgre);
$statement->bindParam(':idCategory', $idCategory);
$statement->bindParam(':illustration', $binaryFile, PDO::PARAM_LOB);
$statement->bindParam(':illustration_filename', $nameFile, PDO::PARAM_STR);
// - Exécute la requête
$isSuccess = $statement->execute();
return $isSuccess;
} */
//Get all photos joining category and type


/* //Get all photos
static function getAllAgrePhoto(): array
{
$query = 'SELECT photoAgre.id, photoAgre.idTypeAgre, photoAgre.idCategory, photoAgre.illustration';
$query .= ' FROM photoAgre ';
$statement = libDb::connect()->prepare($query);
$successOrFailure = $statement->execute();
$listPhotoAgre = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoAgre;
}
//Get all photos joining category and type
static function getAgrePhotoCategoryType(): array
{
$query = 'SELECT photoAgre.id, photoAgre.idTypeAgre, photoAgre.idCategory, photoAgre.illustration, category.id, category.name AS category, typeAgre.id, typeAgre.name AS type';
$query .= ' FROM photoAgre ';
$query .= ' JOIN category ON photoAgre.idCategory = category.id ';
$query .= ' JOIN typeAgre ON photoAgre.idTypeAgre = typeAgre.id ';
$statement = libDb::connect()->prepare($query);
$successOrFailure = $statement->execute();
$listPhotoCatAgre = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoCatAgre;
}

//Get photo by category
static function getAgrePhotoCategory($idCategory): array
{
$query = 'SELECT photoAgre.id, photoAgre.idTypeAgre, photoAgre.idCategory, photoAgre.illustration,photoAgre.illustration_filename, category.id, category.name AS catName, typeAgre.id, typeAgre.name As agreName';
$query .= ' FROM photoAgre ';
$query .= ' JOIN category ON photoAgre.idCategory = category.id ';
$query .= ' JOIN typeAgre ON photoAgre.idTypeAgre = typeAgre.id ';
$query .= ' WHERE photoAgre.idCategory = :idCategory AND photoAgre.idTypeAgre = :idTypeAgre';

$statement = libDb::connect()->prepare($query);
$statement->bindParam(':idCategory', $idCategory);
$statement->bindParam(':idTypeAgre', $idTypeAgre);

$successOrFailure = $statement->execute();
$listPhotoCat = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoCat;
}

//Get photo by type of agre
static function getAgrePhotoType($type): array
{
$query = 'SELECT photoAgre.id, photoAgre.idTypeAgre, photoAgre.idCategory, photoAgre.illustration, category.id, category.name AS category, typeAgre.id, typeAgre.name AS type';
$query .= ' FROM photoAgre ';
$query .= ' JOIN category ON photoAgre.idCategory = category.id ';
$query .= ' JOIN typeAgre ON photoAgre.idTypeAgre = typeAgre.id ';
$query .= ' WHERE type = :$type';

$statement = libDb::connect()->prepare($query);
$successOrFailure = $statement->execute();
$listPhotoType = $statement->fetchAll(PDO::FETCH_ASSOC);

return $listPhotoType;
} */

SELECT typeAgre.id, typeAgre.name AS agreName, typeAgre.label, category.id, category.name AS categoryName, typeAgreCategory.idAgre, typeAgreCategory.idCategory, photoAgre.illustration  FROM typeAgre JOIN typeAgreCategory ON typeAgre.id = typeAgreCategory.idAgre  JOIN category ON category.id = typeAgreCategory.idCategory  AND category.id = 1  JOIN photoAgre ON photoAgre.idTypeAgre = typeAgre.id  WHERE photoAgre.idCategory = 1